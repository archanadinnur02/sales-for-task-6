

## ðŸ“Š Objective
Analyze monthly revenue and order volume using SQL.

## ðŸ›  Tools
- PostgreSQL / MySQL / SQLite
- SQL Aggregation Functions

## ðŸ—ƒ Dataset
- `online_sales` table with:
  - `order_date`
  - `amount`
  - `order_id`

## ðŸ“ˆ What I Did
- Extracted year and month from `order_date`
- Aggregated total revenue using `SUM(amount)`
- Counted total unique orders using `COUNT(DISTINCT order_id)`
- Ordered by year and month
- Filtered for a specific year (2023)

## ðŸ“„ SQL Script
Included in the repo: `monthly_sales_analysis.sql`

## ðŸ“‹ Output Sample
Included: `results_sample.csv`

## ðŸ¤” Interview Q&A

1. **How do you group data by month and year?**  
   Use `EXTRACT(MONTH FROM order_date)` and `EXTRACT(YEAR FROM order_date)` with `GROUP BY`.

2. **Difference between COUNT(*) and COUNT(DISTINCT col)?**  
   `COUNT(*)` counts all rows; `COUNT(DISTINCT col)` counts unique values in a column.

3. **How to calculate monthly revenue?**  
   Use `SUM(amount)` grouped by month/year.

4. **What are aggregate functions?**  
   Functions like `SUM`, `AVG`, `COUNT`, `MAX`, `MIN` that summarize data.

5. **How to handle NULLs in aggregates?**  
   Aggregates like `SUM` ignore NULLs; use `COALESCE` if needed.

6. **Role of ORDER BY and GROUP BY?**  
   `GROUP BY` groups rows for aggregation. `ORDER BY` sorts the result set.

7. **How to get top 3 months by sales?**  
   Use `ORDER BY SUM(amount) DESC LIMIT 3`.

---

## ðŸ“‚ Submission

ðŸ‘‰ **Upload the following to your GitHub repository**:
- `monthly_sales_analysis.sql`
- `results_sample.csv` (optional)
- `README.md` (like above)

Then **submit the GitHub repo link** via the submission form.

---

Would you like me to generate a full GitHub repository structure or sample data too?
